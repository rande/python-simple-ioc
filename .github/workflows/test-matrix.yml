name: Test Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-matrix:
    name: ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  # Add more OS options if needed: macos-latest, windows-latest
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        # exclude:
        #   # Reduce matrix size by excluding some combinations
        #   - os: macos-latest
        #     python-version: '3.10'
        #   - os: windows-latest
        #     python-version: '3.10'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Install core dependencies
      run: |
        uv sync
    
    - name: Run core tests
      run: |
        uv run python -m unittest discover -s tests/ioc_test -p "test_*.py" -v
    
    - name: Install dev dependencies
      run: |
        uv sync --extra dev
    
    - name: Run linting
      run: |
        uv run flake8 ioc/ tests/
    
    - name: Summary
      if: always()
      run: |
        echo "Tests completed for ${{ matrix.os }} / Python ${{ matrix.python-version }}"
